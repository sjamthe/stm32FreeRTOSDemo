ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB71:
  25              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   * @attention
   8:Src/stm32f1xx_it.c ****   *
   9:Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f1xx_it.c ****   *
  12:Src/stm32f1xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f1xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f1xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f1xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f1xx_it.c ****   *
  17:Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Src/stm32f1xx_it.c ****   */
  19:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f1xx_it.c **** 
  21:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f1xx_it.c **** #include "main.h"
  23:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Src/stm32f1xx_it.c **** #include "cmsis_os.h"
  25:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  26:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  27:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  28:Src/stm32f1xx_it.c **** 
  29:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  31:Src/stm32f1xx_it.c **** 
  32:Src/stm32f1xx_it.c **** /* USER CODE END TD */
  33:Src/stm32f1xx_it.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s 			page 2


  34:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  36:Src/stm32f1xx_it.c ****  
  37:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  38:Src/stm32f1xx_it.c **** 
  39:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  41:Src/stm32f1xx_it.c **** 
  42:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  43:Src/stm32f1xx_it.c **** 
  44:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f1xx_it.c **** 
  47:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  48:Src/stm32f1xx_it.c **** 
  49:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  51:Src/stm32f1xx_it.c **** 
  52:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  53:Src/stm32f1xx_it.c **** 
  54:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  56:Src/stm32f1xx_it.c **** 
  57:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  58:Src/stm32f1xx_it.c **** 
  59:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim1;
  61:Src/stm32f1xx_it.c **** 
  62:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  63:Src/stm32f1xx_it.c **** 
  64:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  65:Src/stm32f1xx_it.c **** 
  66:Src/stm32f1xx_it.c **** /******************************************************************************/
  67:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  68:Src/stm32f1xx_it.c **** /******************************************************************************/
  69:Src/stm32f1xx_it.c **** /**
  70:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Src/stm32f1xx_it.c ****   */
  72:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  73:Src/stm32f1xx_it.c **** {
  26              		.loc 1 73 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  74:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Src/stm32f1xx_it.c **** 
  76:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Src/stm32f1xx_it.c **** 
  79:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Src/stm32f1xx_it.c **** }
  31              		.loc 1 80 0
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE71:
  36              		.section	.text.HardFault_Handler,"ax",%progbits
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s 			page 3


  37              		.align	1
  38              		.global	HardFault_Handler
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu softvfp
  44              	HardFault_Handler:
  45              	.LFB72:
  81:Src/stm32f1xx_it.c **** 
  82:Src/stm32f1xx_it.c **** /**
  83:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Src/stm32f1xx_it.c ****   */
  85:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  86:Src/stm32f1xx_it.c **** {
  46              		.loc 1 86 0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.L3:
  53 0000 FEE7     		b	.L3
  54              		.cfi_endproc
  55              	.LFE72:
  57              		.section	.text.MemManage_Handler,"ax",%progbits
  58              		.align	1
  59              		.global	MemManage_Handler
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	MemManage_Handler:
  66              	.LFB73:
  87:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Src/stm32f1xx_it.c **** 
  89:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Src/stm32f1xx_it.c ****   while (1)
  91:Src/stm32f1xx_it.c ****   {
  92:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Src/stm32f1xx_it.c ****   }
  95:Src/stm32f1xx_it.c **** }
  96:Src/stm32f1xx_it.c **** 
  97:Src/stm32f1xx_it.c **** /**
  98:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  99:Src/stm32f1xx_it.c ****   */
 100:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 101:Src/stm32f1xx_it.c **** {
  67              		.loc 1 101 0
  68              		.cfi_startproc
  69              		@ Volatile: function does not return.
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73              	.L5:
  74 0000 FEE7     		b	.L5
  75              		.cfi_endproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s 			page 4


  76              	.LFE73:
  78              		.section	.text.BusFault_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	BusFault_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	BusFault_Handler:
  87              	.LFB74:
 102:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Src/stm32f1xx_it.c **** 
 104:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Src/stm32f1xx_it.c ****   while (1)
 106:Src/stm32f1xx_it.c ****   {
 107:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f1xx_it.c ****   }
 110:Src/stm32f1xx_it.c **** }
 111:Src/stm32f1xx_it.c **** 
 112:Src/stm32f1xx_it.c **** /**
 113:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 114:Src/stm32f1xx_it.c ****   */
 115:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 116:Src/stm32f1xx_it.c **** {
  88              		.loc 1 116 0
  89              		.cfi_startproc
  90              		@ Volatile: function does not return.
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.L7:
  95 0000 FEE7     		b	.L7
  96              		.cfi_endproc
  97              	.LFE74:
  99              		.section	.text.UsageFault_Handler,"ax",%progbits
 100              		.align	1
 101              		.global	UsageFault_Handler
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu softvfp
 107              	UsageFault_Handler:
 108              	.LFB75:
 117:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Src/stm32f1xx_it.c **** 
 119:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Src/stm32f1xx_it.c ****   while (1)
 121:Src/stm32f1xx_it.c ****   {
 122:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Src/stm32f1xx_it.c ****   }
 125:Src/stm32f1xx_it.c **** }
 126:Src/stm32f1xx_it.c **** 
 127:Src/stm32f1xx_it.c **** /**
 128:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Src/stm32f1xx_it.c ****   */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s 			page 5


 130:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 131:Src/stm32f1xx_it.c **** {
 109              		.loc 1 131 0
 110              		.cfi_startproc
 111              		@ Volatile: function does not return.
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115              	.L9:
 116 0000 FEE7     		b	.L9
 117              		.cfi_endproc
 118              	.LFE75:
 120              		.section	.text.DebugMon_Handler,"ax",%progbits
 121              		.align	1
 122              		.global	DebugMon_Handler
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu softvfp
 128              	DebugMon_Handler:
 129              	.LFB76:
 132:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Src/stm32f1xx_it.c **** 
 134:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Src/stm32f1xx_it.c ****   while (1)
 136:Src/stm32f1xx_it.c ****   {
 137:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Src/stm32f1xx_it.c ****   }
 140:Src/stm32f1xx_it.c **** }
 141:Src/stm32f1xx_it.c **** 
 142:Src/stm32f1xx_it.c **** /**
 143:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 144:Src/stm32f1xx_it.c ****   */
 145:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 146:Src/stm32f1xx_it.c **** {
 130              		.loc 1 146 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 147:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 148:Src/stm32f1xx_it.c **** 
 149:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 150:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 151:Src/stm32f1xx_it.c **** 
 152:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 153:Src/stm32f1xx_it.c **** }
 135              		.loc 1 153 0
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE76:
 140              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 141              		.align	1
 142              		.global	TIM1_UP_IRQHandler
 143              		.syntax unified
 144              		.thumb
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s 			page 6


 145              		.thumb_func
 146              		.fpu softvfp
 148              	TIM1_UP_IRQHandler:
 149              	.LFB77:
 154:Src/stm32f1xx_it.c **** 
 155:Src/stm32f1xx_it.c **** /******************************************************************************/
 156:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 157:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 158:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 159:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 160:Src/stm32f1xx_it.c **** /******************************************************************************/
 161:Src/stm32f1xx_it.c **** 
 162:Src/stm32f1xx_it.c **** /**
 163:Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 update interrupt.
 164:Src/stm32f1xx_it.c ****   */
 165:Src/stm32f1xx_it.c **** void TIM1_UP_IRQHandler(void)
 166:Src/stm32f1xx_it.c **** {
 150              		.loc 1 166 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154 0000 08B5     		push	{r3, lr}
 155              	.LCFI0:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 3, -8
 158              		.cfi_offset 14, -4
 167:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 0 */
 168:Src/stm32f1xx_it.c **** 
 169:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 0 */
 170:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 159              		.loc 1 170 0
 160 0002 0248     		ldr	r0, .L13
 161 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 162              	.LVL0:
 171:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 1 */
 172:Src/stm32f1xx_it.c **** 
 173:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 1 */
 174:Src/stm32f1xx_it.c **** }
 163              		.loc 1 174 0
 164 0008 08BD     		pop	{r3, pc}
 165              	.L14:
 166 000a 00BF     		.align	2
 167              	.L13:
 168 000c 00000000 		.word	htim1
 169              		.cfi_endproc
 170              	.LFE77:
 172              		.text
 173              	.Letext0:
 174              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 175              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 176              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 177              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 178              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 179              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 180              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 181              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 182              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s 			page 7


 183              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 184              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 185              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 186              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:16     .text.NMI_Handler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:37     .text.HardFault_Handler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:44     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:58     .text.MemManage_Handler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:65     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:79     .text.BusFault_Handler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:86     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:100    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:107    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:121    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:128    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:141    .text.TIM1_UP_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:148    .text.TIM1_UP_IRQHandler:0000000000000000 TIM1_UP_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccdMQnec.s:168    .text.TIM1_UP_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim1
