ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"timers.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	prvGetNextExpireTime:
  23              	.LFB16:
  24              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    tutorial book, reference manual, or both:                          *
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 2


  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** header files above, but not in this file, in order to generate the correct
  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** privileged Vs unprivileged linkage and placement. */
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 3


  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t				uxAutoReload;		/*<< Set to pdTRUE if the timer should be automatically restarted on
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		uint8_t 			ucStaticallyAllocated; /*<< Set to pdTRUE if the timer was created statically so no at
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 4


 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -e956 A manual analysis and inspection has been used to determine which
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static variables must be declared volatile. */
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists. */
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1;
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2;
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList;
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList;
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint +e956 */
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters ) PRIVILEGED_FUNCTION;
 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 5


 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto reload timer, then call its callback.
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION; /*lint !e971 Unqualified char types are allowed
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 6


 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													"Tmr Svc",
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									"Tmr Svc",
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction ) /*lint !e971 Unqualified char types are allowe
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 7


 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically, so note this
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created dynamically in case the timer is later
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				deleted. */
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdFALSE;
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer ) /*lint !e971 Unqualified char types are allowed for string
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structures. */
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically so note this
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created statically in case it is later deleted. */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 8


 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdTRUE;
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) /*lint !e971 Unqualified char types are allowed for strings and sing
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 9


 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 10


 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters )
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 11


 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 12


 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  25              		.loc 1 635 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  31              		.loc 1 645 0
  32 0000 064B     		ldr	r3, .L4
  33 0002 1A68     		ldr	r2, [r3]
  34 0004 1368     		ldr	r3, [r2]
  35 0006 B3FA83F3 		clz	r3, r3
  36 000a 5B09     		lsrs	r3, r3, #5
  37 000c 0360     		str	r3, [r0]
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  38              		.loc 1 646 0
  39 000e 13B9     		cbnz	r3, .L3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 13


 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  40              		.loc 1 648 0
  41 0010 D368     		ldr	r3, [r2, #12]
  42 0012 1868     		ldr	r0, [r3]
  43              	.LVL1:
  44 0014 7047     		bx	lr
  45              	.LVL2:
  46              	.L3:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  47              		.loc 1 653 0
  48 0016 0020     		movs	r0, #0
  49              	.LVL3:
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  50              		.loc 1 657 0
  51 0018 7047     		bx	lr
  52              	.L5:
  53 001a 00BF     		.align	2
  54              	.L4:
  55 001c 00000000 		.word	.LANCHOR0
  56              		.cfi_endproc
  57              	.LFE16:
  59              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu softvfp
  66              	prvInsertTimerInActiveList:
  67              	.LFB18:
 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 14


 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  68              		.loc 1 684 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              	.LVL4:
  73 0000 08B5     		push	{r3, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 3, -8
  77              		.cfi_offset 14, -4
  78              	.LVL5:
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  79              		.loc 1 687 0
  80 0002 4160     		str	r1, [r0, #4]
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  81              		.loc 1 688 0
  82 0004 0061     		str	r0, [r0, #16]
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  83              		.loc 1 690 0
  84 0006 9142     		cmp	r1, r2
  85 0008 0CD8     		bhi	.L7
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  86              		.loc 1 694 0
  87 000a D21A     		subs	r2, r2, r3
  88              	.LVL6:
  89 000c 8369     		ldr	r3, [r0, #24]
  90              	.LVL7:
  91 000e 9A42     		cmp	r2, r3
  92 0010 01D3     		bcc	.L13
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
  93              		.loc 1 698 0
  94 0012 0120     		movs	r0, #1
  95              	.LVL8:
  96 0014 10E0     		b	.L6
  97              	.LVL9:
  98              	.L13:
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
  99              		.loc 1 702 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 15


 100 0016 011D     		adds	r1, r0, #4
 101              	.LVL10:
 102 0018 094B     		ldr	r3, .L14
 103 001a 1868     		ldr	r0, [r3]
 104              	.LVL11:
 105 001c FFF7FEFF 		bl	vListInsert
 106              	.LVL12:
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 107              		.loc 1 685 0
 108 0020 0020     		movs	r0, #0
 109 0022 09E0     		b	.L6
 110              	.LVL13:
 111              	.L7:
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 112              		.loc 1 707 0
 113 0024 9A42     		cmp	r2, r3
 114 0026 01D2     		bcs	.L9
 115              		.loc 1 707 0 is_stmt 0 discriminator 1
 116 0028 9942     		cmp	r1, r3
 117 002a 06D2     		bcs	.L11
 118              	.L9:
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 119              		.loc 1 716 0 is_stmt 1
 120 002c 011D     		adds	r1, r0, #4
 121              	.LVL14:
 122 002e 054B     		ldr	r3, .L14+4
 123              	.LVL15:
 124 0030 1868     		ldr	r0, [r3]
 125              	.LVL16:
 126 0032 FFF7FEFF 		bl	vListInsert
 127              	.LVL17:
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 128              		.loc 1 685 0
 129 0036 0020     		movs	r0, #0
 130              	.LVL18:
 131              	.L6:
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 132              		.loc 1 721 0
 133 0038 08BD     		pop	{r3, pc}
 134              	.LVL19:
 135              	.L11:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 16


 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 136              		.loc 1 712 0
 137 003a 0120     		movs	r0, #1
 138              	.LVL20:
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 139              		.loc 1 720 0
 140 003c FCE7     		b	.L6
 141              	.L15:
 142 003e 00BF     		.align	2
 143              	.L14:
 144 0040 00000000 		.word	.LANCHOR1
 145 0044 00000000 		.word	.LANCHOR0
 146              		.cfi_endproc
 147              	.LFE18:
 149              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 150              		.align	1
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu softvfp
 156              	prvCheckForValidListAndQueue:
 157              	.LFB21:
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 17


 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_START_FROM_ISR :
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET :
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET_FROM_ISR :
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 18


 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list.
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					There is nothing to do here. */
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list,
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					just free up the memory if the memory was dynamically
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					allocated. */
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer can only have been allocated dynamically -
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						free it again. */
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						vPortFree( pxTimer );
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer could have been allocated statically or
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						dynamically, so check before attempting to free the
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						memory. */
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 19


 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 20


 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 158              		.loc 1 931 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 38B5     		push	{r3, r4, r5, lr}
 163              	.LCFI1:
 164              		.cfi_def_cfa_offset 16
 165              		.cfi_offset 3, -16
 166              		.cfi_offset 4, -12
 167              		.cfi_offset 5, -8
 168              		.cfi_offset 14, -4
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 169              		.loc 1 935 0
 170 0002 FFF7FEFF 		bl	vPortEnterCritical
 171              	.LVL21:
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 172              		.loc 1 937 0
 173 0006 0F4B     		ldr	r3, .L20
 174 0008 1B68     		ldr	r3, [r3]
 175 000a 13B1     		cbz	r3, .L19
 176              	.L17:
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue;
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskM
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 21


 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 177              		.loc 1 977 0
 178 000c FFF7FEFF 		bl	vPortExitCritical
 179              	.LVL22:
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 180              		.loc 1 978 0
 181 0010 38BD     		pop	{r3, r4, r5, pc}
 182              	.L19:
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 183              		.loc 1 939 0
 184 0012 0D4D     		ldr	r5, .L20+4
 185 0014 2846     		mov	r0, r5
 186 0016 FFF7FEFF 		bl	vListInitialise
 187              	.LVL23:
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 188              		.loc 1 940 0
 189 001a 0C4C     		ldr	r4, .L20+8
 190 001c 2046     		mov	r0, r4
 191 001e FFF7FEFF 		bl	vListInitialise
 192              	.LVL24:
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 193              		.loc 1 941 0
 194 0022 0B4B     		ldr	r3, .L20+12
 195 0024 1D60     		str	r5, [r3]
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 196              		.loc 1 942 0
 197 0026 0B4B     		ldr	r3, .L20+16
 198 0028 1C60     		str	r4, [r3]
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 199              		.loc 1 955 0
 200 002a 0022     		movs	r2, #0
 201 002c 0C21     		movs	r1, #12
 202 002e 0A20     		movs	r0, #10
 203 0030 FFF7FEFF 		bl	xQueueGenericCreate
 204              	.LVL25:
 205 0034 034B     		ldr	r3, .L20
 206 0036 1860     		str	r0, [r3]
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 207              		.loc 1 961 0
 208 0038 0028     		cmp	r0, #0
 209 003a E7D0     		beq	.L17
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 210              		.loc 1 963 0
 211 003c 0649     		ldr	r1, .L20+20
 212 003e FFF7FEFF 		bl	vQueueAddToRegistry
 213              	.LVL26:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 22


 214 0042 E3E7     		b	.L17
 215              	.L21:
 216              		.align	2
 217              	.L20:
 218 0044 00000000 		.word	.LANCHOR2
 219 0048 00000000 		.word	.LANCHOR3
 220 004c 00000000 		.word	.LANCHOR4
 221 0050 00000000 		.word	.LANCHOR0
 222 0054 00000000 		.word	.LANCHOR1
 223 0058 00000000 		.word	.LC0
 224              		.cfi_endproc
 225              	.LFE21:
 227              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 228              		.align	1
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu softvfp
 234              	prvInitialiseNewTimer:
 235              	.LFB7:
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 236              		.loc 1 394 0
 237              		.cfi_startproc
 238              		@ args = 8, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              	.LVL27:
 241 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 242              	.LCFI2:
 243              		.cfi_def_cfa_offset 24
 244              		.cfi_offset 4, -24
 245              		.cfi_offset 5, -20
 246              		.cfi_offset 6, -16
 247              		.cfi_offset 7, -12
 248              		.cfi_offset 8, -8
 249              		.cfi_offset 14, -4
 250 0004 079C     		ldr	r4, [sp, #28]
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 251              		.loc 1 396 0
 252 0006 41B9     		cbnz	r1, .L23
 253              	.LBB30:
 254              	.LBB31:
 255              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 23


  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 24


  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 25


 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 26


 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 256              		.loc 2 237 0
 257              		.syntax unified
 258              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 259 0008 4FF05003 			mov r3, #80												
 260 000c 83F31188 		msr basepri, r3											
 261 0010 BFF36F8F 		isb														
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 27


 262 0014 BFF34F8F 		dsb														
 263              	
 264              	@ 0 "" 2
 265              	.LVL28:
 266              		.thumb
 267              		.syntax unified
 268              	.L24:
 269 0018 FEE7     		b	.L24
 270              	.LVL29:
 271              	.L23:
 272 001a 0F46     		mov	r7, r1
 273              	.LBE31:
 274              	.LBE30:
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 275              		.loc 1 398 0
 276 001c 74B1     		cbz	r4, .L22
 277 001e 1D46     		mov	r5, r3
 278 0020 1646     		mov	r6, r2
 279 0022 8046     		mov	r8, r0
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 280              		.loc 1 402 0
 281 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 282              	.LVL30:
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 283              		.loc 1 406 0
 284 0028 C4F80080 		str	r8, [r4]
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 285              		.loc 1 407 0
 286 002c A761     		str	r7, [r4, #24]
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 287              		.loc 1 408 0
 288 002e E661     		str	r6, [r4, #28]
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 289              		.loc 1 409 0
 290 0030 2562     		str	r5, [r4, #32]
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 291              		.loc 1 410 0
 292 0032 069B     		ldr	r3, [sp, #24]
 293 0034 6362     		str	r3, [r4, #36]
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 294              		.loc 1 411 0
 295 0036 201D     		adds	r0, r4, #4
 296 0038 FFF7FEFF 		bl	vListInitialiseItem
 297              	.LVL31:
 298              	.L22:
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 299              		.loc 1 414 0
 300 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 301              		.cfi_endproc
 302              	.LFE7:
 304              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 305              		.align	1
 306              		.global	xTimerCreateTimerTask
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu softvfp
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 28


 312              	xTimerCreateTimerTask:
 313              	.LFB5:
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 314              		.loc 1 260 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318 0000 00B5     		push	{lr}
 319              	.LCFI3:
 320              		.cfi_def_cfa_offset 4
 321              		.cfi_offset 14, -4
 322 0002 83B0     		sub	sp, sp, #12
 323              	.LCFI4:
 324              		.cfi_def_cfa_offset 16
 325              	.LVL32:
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 326              		.loc 1 267 0
 327 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 328              	.LVL33:
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 329              		.loc 1 269 0
 330 0008 0D4B     		ldr	r3, .L32
 331 000a 1B68     		ldr	r3, [r3]
 332 000c 5BB1     		cbz	r3, .L28
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									"Tmr Svc",
 333              		.loc 1 293 0
 334 000e 0D4B     		ldr	r3, .L32+4
 335 0010 0193     		str	r3, [sp, #4]
 336 0012 0323     		movs	r3, #3
 337 0014 0093     		str	r3, [sp]
 338 0016 0023     		movs	r3, #0
 339 0018 4FF48072 		mov	r2, #256
 340 001c 0A49     		ldr	r1, .L32+8
 341 001e 0B48     		ldr	r0, .L32+12
 342 0020 FFF7FEFF 		bl	xTaskCreate
 343              	.LVL34:
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 344              		.loc 1 307 0
 345 0024 40B9     		cbnz	r0, .L27
 346              	.LVL35:
 347              	.L28:
 348              	.LBB32:
 349              	.LBB33:
 350              		.loc 2 237 0
 351              		.syntax unified
 352              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 353 0026 4FF05003 			mov r3, #80												
 354 002a 83F31188 		msr basepri, r3											
 355 002e BFF36F8F 		isb														
 356 0032 BFF34F8F 		dsb														
 357              	
 358              	@ 0 "" 2
 359              	.LVL36:
 360              		.thumb
 361              		.syntax unified
 362              	.L30:
 363 0036 FEE7     		b	.L30
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 29


 364              	.LVL37:
 365              	.L27:
 366              	.LBE33:
 367              	.LBE32:
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 368              		.loc 1 309 0
 369 0038 03B0     		add	sp, sp, #12
 370              	.LCFI5:
 371              		.cfi_def_cfa_offset 4
 372              		@ sp needed
 373 003a 5DF804FB 		ldr	pc, [sp], #4
 374              	.L33:
 375 003e 00BF     		.align	2
 376              	.L32:
 377 0040 00000000 		.word	.LANCHOR2
 378 0044 00000000 		.word	.LANCHOR5
 379 0048 00000000 		.word	.LC1
 380 004c 00000000 		.word	prvTimerTask
 381              		.cfi_endproc
 382              	.LFE5:
 384              		.section	.text.xTimerCreate,"ax",%progbits
 385              		.align	1
 386              		.global	xTimerCreate
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 390              		.fpu softvfp
 392              	xTimerCreate:
 393              	.LFB6:
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 394              		.loc 1 319 0
 395              		.cfi_startproc
 396              		@ args = 4, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              	.LVL38:
 399 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 400              	.LCFI6:
 401              		.cfi_def_cfa_offset 24
 402              		.cfi_offset 4, -24
 403              		.cfi_offset 5, -20
 404              		.cfi_offset 6, -16
 405              		.cfi_offset 7, -12
 406              		.cfi_offset 8, -8
 407              		.cfi_offset 14, -4
 408 0004 82B0     		sub	sp, sp, #8
 409              	.LCFI7:
 410              		.cfi_def_cfa_offset 32
 411 0006 0546     		mov	r5, r0
 412 0008 0E46     		mov	r6, r1
 413 000a 1746     		mov	r7, r2
 414 000c 9846     		mov	r8, r3
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 415              		.loc 1 322 0
 416 000e 2820     		movs	r0, #40
 417              	.LVL39:
 418 0010 FFF7FEFF 		bl	pvPortMalloc
 419              	.LVL40:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 30


 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 420              		.loc 1 324 0
 421 0014 0446     		mov	r4, r0
 422 0016 40B1     		cbz	r0, .L34
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 423              		.loc 1 326 0
 424 0018 0190     		str	r0, [sp, #4]
 425 001a 089B     		ldr	r3, [sp, #32]
 426 001c 0093     		str	r3, [sp]
 427 001e 4346     		mov	r3, r8
 428 0020 3A46     		mov	r2, r7
 429 0022 3146     		mov	r1, r6
 430 0024 2846     		mov	r0, r5
 431              	.LVL41:
 432 0026 FFF7FEFF 		bl	prvInitialiseNewTimer
 433              	.LVL42:
 434              	.L34:
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 435              		.loc 1 339 0
 436 002a 2046     		mov	r0, r4
 437 002c 02B0     		add	sp, sp, #8
 438              	.LCFI8:
 439              		.cfi_def_cfa_offset 24
 440              		@ sp needed
 441 002e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 442              		.cfi_endproc
 443              	.LFE6:
 445              		.section	.text.xTimerGenericCommand,"ax",%progbits
 446              		.align	1
 447              		.global	xTimerGenericCommand
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu softvfp
 453              	xTimerGenericCommand:
 454              	.LFB8:
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 455              		.loc 1 418 0
 456              		.cfi_startproc
 457              		@ args = 4, pretend = 0, frame = 16
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              	.LVL43:
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 460              		.loc 1 422 0
 461 0000 C8B1     		cbz	r0, .L46
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 462              		.loc 1 418 0
 463 0002 30B5     		push	{r4, r5, lr}
 464              	.LCFI9:
 465              		.cfi_def_cfa_offset 12
 466              		.cfi_offset 4, -12
 467              		.cfi_offset 5, -8
 468              		.cfi_offset 14, -4
 469 0004 85B0     		sub	sp, sp, #20
 470              	.LCFI10:
 471              		.cfi_def_cfa_offset 32
 472 0006 1546     		mov	r5, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 31


 473 0008 0446     		mov	r4, r0
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 474              		.loc 1 426 0
 475 000a 174A     		ldr	r2, .L48
 476              	.LVL44:
 477 000c 1068     		ldr	r0, [r2]
 478              	.LVL45:
 479 000e 40B3     		cbz	r0, .L43
 480 0010 1A46     		mov	r2, r3
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 481              		.loc 1 429 0
 482 0012 0191     		str	r1, [sp, #4]
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 483              		.loc 1 430 0
 484 0014 0295     		str	r5, [sp, #8]
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 485              		.loc 1 431 0
 486 0016 0394     		str	r4, [sp, #12]
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 487              		.loc 1 433 0
 488 0018 0529     		cmp	r1, #5
 489 001a 1DDC     		bgt	.L41
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 490              		.loc 1 435 0
 491 001c FFF7FEFF 		bl	xTaskGetSchedulerState
 492              	.LVL46:
 493 0020 0228     		cmp	r0, #2
 494 0022 11D0     		beq	.L47
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 495              		.loc 1 441 0
 496 0024 0023     		movs	r3, #0
 497 0026 1A46     		mov	r2, r3
 498 0028 01A9     		add	r1, sp, #4
 499 002a 0F48     		ldr	r0, .L48
 500 002c 0068     		ldr	r0, [r0]
 501 002e FFF7FEFF 		bl	xQueueGenericSend
 502              	.LVL47:
 503              	.L37:
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 504              		.loc 1 457 0
 505 0032 05B0     		add	sp, sp, #20
 506              	.LCFI11:
 507              		.cfi_def_cfa_offset 12
 508              		@ sp needed
 509 0034 30BD     		pop	{r4, r5, pc}
 510              	.LVL48:
 511              	.L46:
 512              	.LCFI12:
 513              		.cfi_def_cfa_offset 0
 514              		.cfi_restore 4
 515              		.cfi_restore 5
 516              		.cfi_restore 14
 517              	.LBB34:
 518              	.LBB35:
 519              		.loc 2 237 0
 520              		.syntax unified
 521              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 32


 522 0036 4FF05003 			mov r3, #80												
 523 003a 83F31188 		msr basepri, r3											
 524 003e BFF36F8F 		isb														
 525 0042 BFF34F8F 		dsb														
 526              	
 527              	@ 0 "" 2
 528              	.LVL49:
 529              		.thumb
 530              		.syntax unified
 531              	.L39:
 532 0046 FEE7     		b	.L39
 533              	.LVL50:
 534              	.L47:
 535              	.LCFI13:
 536              		.cfi_def_cfa_offset 32
 537              		.cfi_offset 4, -12
 538              		.cfi_offset 5, -8
 539              		.cfi_offset 14, -4
 540              	.LBE35:
 541              	.LBE34:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 542              		.loc 1 437 0
 543 0048 0023     		movs	r3, #0
 544 004a 089A     		ldr	r2, [sp, #32]
 545 004c 01A9     		add	r1, sp, #4
 546 004e 0648     		ldr	r0, .L48
 547 0050 0068     		ldr	r0, [r0]
 548 0052 FFF7FEFF 		bl	xQueueGenericSend
 549              	.LVL51:
 550 0056 ECE7     		b	.L37
 551              	.LVL52:
 552              	.L41:
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 553              		.loc 1 446 0
 554 0058 0023     		movs	r3, #0
 555 005a 01A9     		add	r1, sp, #4
 556              	.LVL53:
 557 005c FFF7FEFF 		bl	xQueueGenericSendFromISR
 558              	.LVL54:
 559 0060 E7E7     		b	.L37
 560              	.LVL55:
 561              	.L43:
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 562              		.loc 1 419 0
 563 0062 0020     		movs	r0, #0
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 564              		.loc 1 456 0
 565 0064 E5E7     		b	.L37
 566              	.L49:
 567 0066 00BF     		.align	2
 568              	.L48:
 569 0068 00000000 		.word	.LANCHOR2
 570              		.cfi_endproc
 571              	.LFE8:
 573              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 574              		.align	1
 575              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 33


 576              		.thumb
 577              		.thumb_func
 578              		.fpu softvfp
 580              	prvSwitchTimerLists:
 581              	.LFB20:
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 582              		.loc 1 872 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586 0000 70B5     		push	{r4, r5, r6, lr}
 587              	.LCFI14:
 588              		.cfi_def_cfa_offset 16
 589              		.cfi_offset 4, -16
 590              		.cfi_offset 5, -12
 591              		.cfi_offset 6, -8
 592              		.cfi_offset 14, -4
 593 0002 82B0     		sub	sp, sp, #8
 594              	.LCFI15:
 595              		.cfi_def_cfa_offset 24
 596              	.L52:
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 597              		.loc 1 882 0
 598 0004 1A4B     		ldr	r3, .L59
 599 0006 1B68     		ldr	r3, [r3]
 600 0008 1A68     		ldr	r2, [r3]
 601 000a 52B3     		cbz	r2, .L58
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 602              		.loc 1 884 0
 603 000c DB68     		ldr	r3, [r3, #12]
 604 000e 1E68     		ldr	r6, [r3]
 605              	.LVL56:
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 606              		.loc 1 887 0
 607 0010 DC68     		ldr	r4, [r3, #12]
 608              	.LVL57:
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 609              		.loc 1 888 0
 610 0012 251D     		adds	r5, r4, #4
 611 0014 2846     		mov	r0, r5
 612 0016 FFF7FEFF 		bl	uxListRemove
 613              	.LVL58:
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 614              		.loc 1 894 0
 615 001a 636A     		ldr	r3, [r4, #36]
 616 001c 2046     		mov	r0, r4
 617 001e 9847     		blx	r3
 618              	.LVL59:
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 619              		.loc 1 896 0
 620 0020 E369     		ldr	r3, [r4, #28]
 621 0022 012B     		cmp	r3, #1
 622 0024 EED1     		bne	.L52
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 623              		.loc 1 904 0
 624 0026 A369     		ldr	r3, [r4, #24]
 625 0028 3344     		add	r3, r3, r6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 34


 626              	.LVL60:
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 627              		.loc 1 905 0
 628 002a 9E42     		cmp	r6, r3
 629 002c 07D2     		bcs	.L53
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 630              		.loc 1 907 0
 631 002e 6360     		str	r3, [r4, #4]
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 632              		.loc 1 908 0
 633 0030 2461     		str	r4, [r4, #16]
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 634              		.loc 1 909 0
 635 0032 2946     		mov	r1, r5
 636 0034 0E4B     		ldr	r3, .L59
 637              	.LVL61:
 638 0036 1868     		ldr	r0, [r3]
 639 0038 FFF7FEFF 		bl	vListInsert
 640              	.LVL62:
 641 003c E2E7     		b	.L52
 642              	.LVL63:
 643              	.L53:
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 644              		.loc 1 913 0
 645 003e 0021     		movs	r1, #0
 646 0040 0091     		str	r1, [sp]
 647 0042 0B46     		mov	r3, r1
 648              	.LVL64:
 649 0044 3246     		mov	r2, r6
 650 0046 2046     		mov	r0, r4
 651 0048 FFF7FEFF 		bl	xTimerGenericCommand
 652              	.LVL65:
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 653              		.loc 1 914 0
 654 004c 0028     		cmp	r0, #0
 655 004e D9D1     		bne	.L52
 656              	.LBB36:
 657              	.LBB37:
 658              		.loc 2 237 0
 659              		.syntax unified
 660              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 661 0050 4FF05003 			mov r3, #80												
 662 0054 83F31188 		msr basepri, r3											
 663 0058 BFF36F8F 		isb														
 664 005c BFF34F8F 		dsb														
 665              	
 666              	@ 0 "" 2
 667              	.LVL66:
 668              		.thumb
 669              		.syntax unified
 670              	.L55:
 671 0060 FEE7     		b	.L55
 672              	.LVL67:
 673              	.L58:
 674              	.LBE37:
 675              	.LBE36:
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 35


 676              		.loc 1 925 0
 677 0062 044A     		ldr	r2, .L59+4
 678 0064 1068     		ldr	r0, [r2]
 679 0066 0249     		ldr	r1, .L59
 680 0068 0860     		str	r0, [r1]
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 681              		.loc 1 926 0
 682 006a 1360     		str	r3, [r2]
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 683              		.loc 1 927 0
 684 006c 02B0     		add	sp, sp, #8
 685              	.LCFI16:
 686              		.cfi_def_cfa_offset 16
 687              		@ sp needed
 688 006e 70BD     		pop	{r4, r5, r6, pc}
 689              	.L60:
 690              		.align	2
 691              	.L59:
 692 0070 00000000 		.word	.LANCHOR0
 693 0074 00000000 		.word	.LANCHOR1
 694              		.cfi_endproc
 695              	.LFE20:
 697              		.section	.text.prvSampleTimeNow,"ax",%progbits
 698              		.align	1
 699              		.syntax unified
 700              		.thumb
 701              		.thumb_func
 702              		.fpu softvfp
 704              	prvSampleTimeNow:
 705              	.LFB17:
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 706              		.loc 1 661 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              	.LVL68:
 711 0000 38B5     		push	{r3, r4, r5, lr}
 712              	.LCFI17:
 713              		.cfi_def_cfa_offset 16
 714              		.cfi_offset 3, -16
 715              		.cfi_offset 4, -12
 716              		.cfi_offset 5, -8
 717              		.cfi_offset 14, -4
 718 0002 0546     		mov	r5, r0
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 719              		.loc 1 665 0
 720 0004 FFF7FEFF 		bl	xTaskGetTickCount
 721              	.LVL69:
 722 0008 0446     		mov	r4, r0
 723              	.LVL70:
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 724              		.loc 1 667 0
 725 000a 074B     		ldr	r3, .L66
 726 000c 1B68     		ldr	r3, [r3]
 727 000e 8342     		cmp	r3, r0
 728 0010 05D8     		bhi	.L65
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 36


 729              		.loc 1 674 0
 730 0012 0023     		movs	r3, #0
 731 0014 2B60     		str	r3, [r5]
 732              	.LVL71:
 733              	.L63:
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 734              		.loc 1 677 0
 735 0016 044B     		ldr	r3, .L66
 736 0018 1C60     		str	r4, [r3]
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 737              		.loc 1 680 0
 738 001a 2046     		mov	r0, r4
 739 001c 38BD     		pop	{r3, r4, r5, pc}
 740              	.LVL72:
 741              	.L65:
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 742              		.loc 1 669 0
 743 001e FFF7FEFF 		bl	prvSwitchTimerLists
 744              	.LVL73:
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 745              		.loc 1 670 0
 746 0022 0123     		movs	r3, #1
 747 0024 2B60     		str	r3, [r5]
 748 0026 F6E7     		b	.L63
 749              	.L67:
 750              		.align	2
 751              	.L66:
 752 0028 00000000 		.word	.LANCHOR6
 753              		.cfi_endproc
 754              	.LFE17:
 756              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 757              		.align	1
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu softvfp
 763              	prvProcessExpiredTimer:
 764              	.LFB13:
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 765              		.loc 1 499 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              	.LVL74:
 770 0000 70B5     		push	{r4, r5, r6, lr}
 771              	.LCFI18:
 772              		.cfi_def_cfa_offset 16
 773              		.cfi_offset 4, -16
 774              		.cfi_offset 5, -12
 775              		.cfi_offset 6, -8
 776              		.cfi_offset 14, -4
 777 0002 82B0     		sub	sp, sp, #8
 778              	.LCFI19:
 779              		.cfi_def_cfa_offset 24
 780 0004 0546     		mov	r5, r0
 781 0006 0E46     		mov	r6, r1
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 37


 782              		.loc 1 501 0
 783 0008 144B     		ldr	r3, .L73
 784 000a 1B68     		ldr	r3, [r3]
 785 000c DB68     		ldr	r3, [r3, #12]
 786 000e DC68     		ldr	r4, [r3, #12]
 787              	.LVL75:
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 788              		.loc 1 505 0
 789 0010 201D     		adds	r0, r4, #4
 790              	.LVL76:
 791 0012 FFF7FEFF 		bl	uxListRemove
 792              	.LVL77:
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 793              		.loc 1 510 0
 794 0016 E369     		ldr	r3, [r4, #28]
 795 0018 012B     		cmp	r3, #1
 796 001a 04D0     		beq	.L72
 797              	.L69:
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 798              		.loc 1 534 0
 799 001c 636A     		ldr	r3, [r4, #36]
 800 001e 2046     		mov	r0, r4
 801 0020 9847     		blx	r3
 802              	.LVL78:
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 803              		.loc 1 535 0
 804 0022 02B0     		add	sp, sp, #8
 805              	.LCFI20:
 806              		.cfi_remember_state
 807              		.cfi_def_cfa_offset 16
 808              		@ sp needed
 809 0024 70BD     		pop	{r4, r5, r6, pc}
 810              	.LVL79:
 811              	.L72:
 812              	.LCFI21:
 813              		.cfi_restore_state
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 814              		.loc 1 515 0
 815 0026 A169     		ldr	r1, [r4, #24]
 816 0028 2B46     		mov	r3, r5
 817 002a 3246     		mov	r2, r6
 818 002c 2944     		add	r1, r1, r5
 819 002e 2046     		mov	r0, r4
 820 0030 FFF7FEFF 		bl	prvInsertTimerInActiveList
 821              	.LVL80:
 822 0034 0028     		cmp	r0, #0
 823 0036 F1D0     		beq	.L69
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 824              		.loc 1 519 0
 825 0038 0021     		movs	r1, #0
 826 003a 0091     		str	r1, [sp]
 827 003c 0B46     		mov	r3, r1
 828 003e 2A46     		mov	r2, r5
 829 0040 2046     		mov	r0, r4
 830 0042 FFF7FEFF 		bl	xTimerGenericCommand
 831              	.LVL81:
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 38


 832              		.loc 1 520 0
 833 0046 0028     		cmp	r0, #0
 834 0048 E8D1     		bne	.L69
 835              	.LBB38:
 836              	.LBB39:
 837              		.loc 2 237 0
 838              		.syntax unified
 839              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 840 004a 4FF05003 			mov r3, #80												
 841 004e 83F31188 		msr basepri, r3											
 842 0052 BFF36F8F 		isb														
 843 0056 BFF34F8F 		dsb														
 844              	
 845              	@ 0 "" 2
 846              	.LVL82:
 847              		.thumb
 848              		.syntax unified
 849              	.L70:
 850 005a FEE7     		b	.L70
 851              	.L74:
 852              		.align	2
 853              	.L73:
 854 005c 00000000 		.word	.LANCHOR0
 855              	.LBE39:
 856              	.LBE38:
 857              		.cfi_endproc
 858              	.LFE13:
 860              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 861              		.align	1
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
 865              		.fpu softvfp
 867              	prvProcessTimerOrBlockTask:
 868              	.LFB15:
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 869              		.loc 1 575 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 8
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL83:
 874 0000 70B5     		push	{r4, r5, r6, lr}
 875              	.LCFI22:
 876              		.cfi_def_cfa_offset 16
 877              		.cfi_offset 4, -16
 878              		.cfi_offset 5, -12
 879              		.cfi_offset 6, -8
 880              		.cfi_offset 14, -4
 881 0002 82B0     		sub	sp, sp, #8
 882              	.LCFI23:
 883              		.cfi_def_cfa_offset 24
 884 0004 0646     		mov	r6, r0
 885 0006 0C46     		mov	r4, r1
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 886              		.loc 1 579 0
 887 0008 FFF7FEFF 		bl	vTaskSuspendAll
 888              	.LVL84:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 39


 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 889              		.loc 1 586 0
 890 000c 01A8     		add	r0, sp, #4
 891 000e FFF7FEFF 		bl	prvSampleTimeNow
 892              	.LVL85:
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 893              		.loc 1 587 0
 894 0012 019B     		ldr	r3, [sp, #4]
 895 0014 1BBB     		cbnz	r3, .L76
 896 0016 0546     		mov	r5, r0
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 897              		.loc 1 590 0
 898 0018 0CB9     		cbnz	r4, .L77
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 899              		.loc 1 590 0 is_stmt 0 discriminator 1
 900 001a B042     		cmp	r0, r6
 901 001c 18D2     		bcs	.L81
 902              	.L77:
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 903              		.loc 1 603 0 is_stmt 1
 904 001e 2CB1     		cbz	r4, .L79
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 905              		.loc 1 607 0
 906 0020 114B     		ldr	r3, .L82
 907 0022 1B68     		ldr	r3, [r3]
 908 0024 1C68     		ldr	r4, [r3]
 909              	.LVL86:
 910 0026 B4FA84F4 		clz	r4, r4
 911 002a 6409     		lsrs	r4, r4, #5
 912              	.LVL87:
 913              	.L79:
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 914              		.loc 1 610 0
 915 002c 2246     		mov	r2, r4
 916 002e 711B     		subs	r1, r6, r5
 917 0030 0E4B     		ldr	r3, .L82+4
 918 0032 1868     		ldr	r0, [r3]
 919              	.LVL88:
 920 0034 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 921              	.LVL89:
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 922              		.loc 1 612 0
 923 0038 FFF7FEFF 		bl	xTaskResumeAll
 924              	.LVL90:
 925 003c 88B9     		cbnz	r0, .L75
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 926              		.loc 1 618 0
 927 003e 0C4B     		ldr	r3, .L82+8
 928 0040 4FF08052 		mov	r2, #268435456
 929 0044 1A60     		str	r2, [r3]
 930              		.syntax unified
 931              	@ 618 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 932 0046 BFF34F8F 		dsb
 933              	@ 0 "" 2
 934              	@ 618 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 935 004a BFF36F8F 		isb
 936              	@ 0 "" 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 40


 937              		.thumb
 938              		.syntax unified
 939 004e 08E0     		b	.L75
 940              	.LVL91:
 941              	.L81:
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 942              		.loc 1 592 0
 943 0050 FFF7FEFF 		bl	xTaskResumeAll
 944              	.LVL92:
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 945              		.loc 1 593 0
 946 0054 2946     		mov	r1, r5
 947 0056 3046     		mov	r0, r6
 948 0058 FFF7FEFF 		bl	prvProcessExpiredTimer
 949              	.LVL93:
 950 005c 01E0     		b	.L75
 951              	.LVL94:
 952              	.L76:
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 953              		.loc 1 628 0
 954 005e FFF7FEFF 		bl	xTaskResumeAll
 955              	.LVL95:
 956              	.L75:
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 957              		.loc 1 631 0
 958 0062 02B0     		add	sp, sp, #8
 959              	.LCFI24:
 960              		.cfi_def_cfa_offset 16
 961              		@ sp needed
 962 0064 70BD     		pop	{r4, r5, r6, pc}
 963              	.LVL96:
 964              	.L83:
 965 0066 00BF     		.align	2
 966              	.L82:
 967 0068 00000000 		.word	.LANCHOR1
 968 006c 00000000 		.word	.LANCHOR2
 969 0070 04ED00E0 		.word	-536810236
 970              		.cfi_endproc
 971              	.LFE15:
 973              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 974              		.align	1
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 978              		.fpu softvfp
 980              	prvProcessReceivedCommands:
 981              	.LFB19:
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 982              		.loc 1 725 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 16
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986 0000 30B5     		push	{r4, r5, lr}
 987              	.LCFI25:
 988              		.cfi_def_cfa_offset 12
 989              		.cfi_offset 4, -12
 990              		.cfi_offset 5, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 41


 991              		.cfi_offset 14, -4
 992 0002 87B0     		sub	sp, sp, #28
 993              	.LCFI26:
 994              		.cfi_def_cfa_offset 40
 995              	.L86:
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 996              		.loc 1 731 0
 997 0004 0023     		movs	r3, #0
 998 0006 1A46     		mov	r2, r3
 999 0008 03A9     		add	r1, sp, #12
 1000 000a 3548     		ldr	r0, .L101
 1001 000c 0068     		ldr	r0, [r0]
 1002 000e FFF7FEFF 		bl	xQueueGenericReceive
 1003              	.LVL97:
 1004 0012 0028     		cmp	r0, #0
 1005 0014 61D0     		beq	.L99
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1006              		.loc 1 757 0
 1007 0016 039B     		ldr	r3, [sp, #12]
 1008 0018 002B     		cmp	r3, #0
 1009 001a F3DB     		blt	.L86
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1010              		.loc 1 761 0
 1011 001c 059C     		ldr	r4, [sp, #20]
 1012              	.LVL98:
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1013              		.loc 1 763 0
 1014 001e 6369     		ldr	r3, [r4, #20]
 1015 0020 13B1     		cbz	r3, .L87
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1016              		.loc 1 766 0
 1017 0022 201D     		adds	r0, r4, #4
 1018 0024 FFF7FEFF 		bl	uxListRemove
 1019              	.LVL99:
 1020              	.L87:
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1021              		.loc 1 781 0
 1022 0028 02A8     		add	r0, sp, #8
 1023 002a FFF7FEFF 		bl	prvSampleTimeNow
 1024              	.LVL100:
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1025              		.loc 1 783 0
 1026 002e 039B     		ldr	r3, [sp, #12]
 1027 0030 092B     		cmp	r3, #9
 1028 0032 E7D8     		bhi	.L86
 1029 0034 01A2     		adr	r2, .L90
 1030 0036 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1031 003a 00BF     		.p2align 2
 1032              	.L90:
 1033 003c 65000000 		.word	.L89+1
 1034 0040 65000000 		.word	.L89+1
 1035 0044 65000000 		.word	.L89+1
 1036 0048 05000000 		.word	.L86+1
 1037 004c AD000000 		.word	.L91+1
 1038 0050 D3000000 		.word	.L92+1
 1039 0054 65000000 		.word	.L89+1
 1040 0058 65000000 		.word	.L89+1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 42


 1041 005c 05000000 		.word	.L86+1
 1042 0060 AD000000 		.word	.L91+1
 1043              		.p2align 1
 1044              	.L89:
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1045              		.loc 1 791 0
 1046 0064 0499     		ldr	r1, [sp, #16]
 1047 0066 A569     		ldr	r5, [r4, #24]
 1048 0068 0B46     		mov	r3, r1
 1049 006a 0246     		mov	r2, r0
 1050 006c 2944     		add	r1, r1, r5
 1051 006e 2046     		mov	r0, r4
 1052              	.LVL101:
 1053 0070 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1054              	.LVL102:
 1055 0074 0028     		cmp	r0, #0
 1056 0076 C5D0     		beq	.L86
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1057              		.loc 1 795 0
 1058 0078 636A     		ldr	r3, [r4, #36]
 1059 007a 2046     		mov	r0, r4
 1060 007c 9847     		blx	r3
 1061              	.LVL103:
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1062              		.loc 1 798 0
 1063 007e E369     		ldr	r3, [r4, #28]
 1064 0080 012B     		cmp	r3, #1
 1065 0082 BFD1     		bne	.L86
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1066              		.loc 1 800 0
 1067 0084 A269     		ldr	r2, [r4, #24]
 1068 0086 0021     		movs	r1, #0
 1069 0088 0091     		str	r1, [sp]
 1070 008a 0B46     		mov	r3, r1
 1071 008c 0498     		ldr	r0, [sp, #16]
 1072 008e 0244     		add	r2, r2, r0
 1073 0090 2046     		mov	r0, r4
 1074 0092 FFF7FEFF 		bl	xTimerGenericCommand
 1075              	.LVL104:
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1076              		.loc 1 801 0
 1077 0096 0028     		cmp	r0, #0
 1078 0098 B4D1     		bne	.L86
 1079              	.LBB40:
 1080              	.LBB41:
 1081              		.loc 2 237 0
 1082              		.syntax unified
 1083              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1084 009a 4FF05003 			mov r3, #80												
 1085 009e 83F31188 		msr basepri, r3											
 1086 00a2 BFF36F8F 		isb														
 1087 00a6 BFF34F8F 		dsb														
 1088              	
 1089              	@ 0 "" 2
 1090              	.LVL105:
 1091              		.thumb
 1092              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 43


 1093              	.L94:
 1094 00aa FEE7     		b	.L94
 1095              	.LVL106:
 1096              	.L91:
 1097              	.LBE41:
 1098              	.LBE40:
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1099              		.loc 1 823 0
 1100 00ac 0499     		ldr	r1, [sp, #16]
 1101 00ae A161     		str	r1, [r4, #24]
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1102              		.loc 1 824 0
 1103 00b0 31B1     		cbz	r1, .L100
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1104              		.loc 1 832 0
 1105 00b2 0346     		mov	r3, r0
 1106 00b4 0246     		mov	r2, r0
 1107 00b6 0144     		add	r1, r1, r0
 1108 00b8 2046     		mov	r0, r4
 1109              	.LVL107:
 1110 00ba FFF7FEFF 		bl	prvInsertTimerInActiveList
 1111              	.LVL108:
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1112              		.loc 1 833 0
 1113 00be A1E7     		b	.L86
 1114              	.LVL109:
 1115              	.L100:
 1116              	.LBB42:
 1117              	.LBB43:
 1118              		.loc 2 237 0
 1119              		.syntax unified
 1120              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1121 00c0 4FF05003 			mov r3, #80												
 1122 00c4 83F31188 		msr basepri, r3											
 1123 00c8 BFF36F8F 		isb														
 1124 00cc BFF34F8F 		dsb														
 1125              	
 1126              	@ 0 "" 2
 1127              	.LVL110:
 1128              		.thumb
 1129              		.syntax unified
 1130              	.L96:
 1131 00d0 FEE7     		b	.L96
 1132              	.L92:
 1133              	.LBE43:
 1134              	.LBE42:
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 1135              		.loc 1 843 0
 1136 00d2 2046     		mov	r0, r4
 1137              	.LVL111:
 1138 00d4 FFF7FEFF 		bl	vPortFree
 1139              	.LVL112:
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1140              		.loc 1 860 0
 1141 00d8 94E7     		b	.L86
 1142              	.LVL113:
 1143              	.L99:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 44


 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1144              		.loc 1 868 0
 1145 00da 07B0     		add	sp, sp, #28
 1146              	.LCFI27:
 1147              		.cfi_def_cfa_offset 12
 1148              		@ sp needed
 1149 00dc 30BD     		pop	{r4, r5, pc}
 1150              	.L102:
 1151 00de 00BF     		.align	2
 1152              	.L101:
 1153 00e0 00000000 		.word	.LANCHOR2
 1154              		.cfi_endproc
 1155              	.LFE19:
 1157              		.section	.text.prvTimerTask,"ax",%progbits
 1158              		.align	1
 1159              		.syntax unified
 1160              		.thumb
 1161              		.thumb_func
 1162              		.fpu softvfp
 1164              	prvTimerTask:
 1165              	.LFB14:
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1166              		.loc 1 539 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 8
 1169              		@ frame_needed = 0, uses_anonymous_args = 0
 1170              	.LVL114:
 1171 0000 00B5     		push	{lr}
 1172              	.LCFI28:
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 14, -4
 1175 0002 83B0     		sub	sp, sp, #12
 1176              	.LCFI29:
 1177              		.cfi_def_cfa_offset 16
 1178              	.LVL115:
 1179              	.L104:
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1180              		.loc 1 562 0 discriminator 1
 1181 0004 01A8     		add	r0, sp, #4
 1182 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1183              	.LVL116:
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1184              		.loc 1 566 0 discriminator 1
 1185 000a 0199     		ldr	r1, [sp, #4]
 1186 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1187              	.LVL117:
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1188              		.loc 1 569 0 discriminator 1
 1189 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1190              	.LVL118:
 1191 0014 F6E7     		b	.L104
 1192              		.cfi_endproc
 1193              	.LFE14:
 1195              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1196              		.align	1
 1197              		.global	xTimerGetTimerDaemonTaskHandle
 1198              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 45


 1199              		.thumb
 1200              		.thumb_func
 1201              		.fpu softvfp
 1203              	xTimerGetTimerDaemonTaskHandle:
 1204              	.LFB9:
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1205              		.loc 1 461 0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209              		@ link register save eliminated.
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1210              		.loc 1 464 0
 1211 0000 064B     		ldr	r3, .L110
 1212 0002 1868     		ldr	r0, [r3]
 1213 0004 00B1     		cbz	r0, .L109
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1214              		.loc 1 466 0
 1215 0006 7047     		bx	lr
 1216              	.L109:
 1217              	.LBB44:
 1218              	.LBB45:
 1219              		.loc 2 237 0
 1220              		.syntax unified
 1221              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1222 0008 4FF05003 			mov r3, #80												
 1223 000c 83F31188 		msr basepri, r3											
 1224 0010 BFF36F8F 		isb														
 1225 0014 BFF34F8F 		dsb														
 1226              	
 1227              	@ 0 "" 2
 1228              	.LVL119:
 1229              		.thumb
 1230              		.syntax unified
 1231              	.L108:
 1232 0018 FEE7     		b	.L108
 1233              	.L111:
 1234 001a 00BF     		.align	2
 1235              	.L110:
 1236 001c 00000000 		.word	.LANCHOR5
 1237              	.LBE45:
 1238              	.LBE44:
 1239              		.cfi_endproc
 1240              	.LFE9:
 1242              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1243              		.align	1
 1244              		.global	xTimerGetPeriod
 1245              		.syntax unified
 1246              		.thumb
 1247              		.thumb_func
 1248              		.fpu softvfp
 1250              	xTimerGetPeriod:
 1251              	.LFB10:
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1252              		.loc 1 470 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 46


 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256              		@ link register save eliminated.
 1257              	.LVL120:
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1258              		.loc 1 473 0
 1259 0000 08B1     		cbz	r0, .L115
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1260              		.loc 1 475 0
 1261 0002 8069     		ldr	r0, [r0, #24]
 1262              	.LVL121:
 1263 0004 7047     		bx	lr
 1264              	.LVL122:
 1265              	.L115:
 1266              	.LBB46:
 1267              	.LBB47:
 1268              		.loc 2 237 0
 1269              		.syntax unified
 1270              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1271 0006 4FF05003 			mov r3, #80												
 1272 000a 83F31188 		msr basepri, r3											
 1273 000e BFF36F8F 		isb														
 1274 0012 BFF34F8F 		dsb														
 1275              	
 1276              	@ 0 "" 2
 1277              	.LVL123:
 1278              		.thumb
 1279              		.syntax unified
 1280              	.L114:
 1281 0016 FEE7     		b	.L114
 1282              	.LBE47:
 1283              	.LBE46:
 1284              		.cfi_endproc
 1285              	.LFE10:
 1287              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1288              		.align	1
 1289              		.global	xTimerGetExpiryTime
 1290              		.syntax unified
 1291              		.thumb
 1292              		.thumb_func
 1293              		.fpu softvfp
 1295              	xTimerGetExpiryTime:
 1296              	.LFB11:
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 1297              		.loc 1 479 0
 1298              		.cfi_startproc
 1299              		@ args = 0, pretend = 0, frame = 0
 1300              		@ frame_needed = 0, uses_anonymous_args = 0
 1301              		@ link register save eliminated.
 1302              	.LVL124:
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1303              		.loc 1 483 0
 1304 0000 08B1     		cbz	r0, .L119
 1305              	.LVL125:
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1306              		.loc 1 486 0
 1307 0002 4068     		ldr	r0, [r0, #4]
 1308              	.LVL126:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 47


 1309 0004 7047     		bx	lr
 1310              	.LVL127:
 1311              	.L119:
 1312              	.LBB48:
 1313              	.LBB49:
 1314              		.loc 2 237 0
 1315              		.syntax unified
 1316              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1317 0006 4FF05003 			mov r3, #80												
 1318 000a 83F31188 		msr basepri, r3											
 1319 000e BFF36F8F 		isb														
 1320 0012 BFF34F8F 		dsb														
 1321              	
 1322              	@ 0 "" 2
 1323              	.LVL128:
 1324              		.thumb
 1325              		.syntax unified
 1326              	.L118:
 1327 0016 FEE7     		b	.L118
 1328              	.LBE49:
 1329              	.LBE48:
 1330              		.cfi_endproc
 1331              	.LFE11:
 1333              		.section	.text.pcTimerGetName,"ax",%progbits
 1334              		.align	1
 1335              		.global	pcTimerGetName
 1336              		.syntax unified
 1337              		.thumb
 1338              		.thumb_func
 1339              		.fpu softvfp
 1341              	pcTimerGetName:
 1342              	.LFB12:
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1343              		.loc 1 490 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              		@ link register save eliminated.
 1348              	.LVL129:
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1349              		.loc 1 493 0
 1350 0000 08B1     		cbz	r0, .L123
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1351              		.loc 1 495 0
 1352 0002 0068     		ldr	r0, [r0]
 1353              	.LVL130:
 1354 0004 7047     		bx	lr
 1355              	.LVL131:
 1356              	.L123:
 1357              	.LBB50:
 1358              	.LBB51:
 1359              		.loc 2 237 0
 1360              		.syntax unified
 1361              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1362 0006 4FF05003 			mov r3, #80												
 1363 000a 83F31188 		msr basepri, r3											
 1364 000e BFF36F8F 		isb														
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 48


 1365 0012 BFF34F8F 		dsb														
 1366              	
 1367              	@ 0 "" 2
 1368              	.LVL132:
 1369              		.thumb
 1370              		.syntax unified
 1371              	.L122:
 1372 0016 FEE7     		b	.L122
 1373              	.LBE51:
 1374              	.LBE50:
 1375              		.cfi_endproc
 1376              	.LFE12:
 1378              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1379              		.align	1
 1380              		.global	xTimerIsTimerActive
 1381              		.syntax unified
 1382              		.thumb
 1383              		.thumb_func
 1384              		.fpu softvfp
 1386              	xTimerIsTimerActive:
 1387              	.LFB22:
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1388              		.loc 1 982 0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 0
 1391              		@ frame_needed = 0, uses_anonymous_args = 0
 1392              	.LVL133:
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1393              		.loc 1 986 0
 1394 0000 40B9     		cbnz	r0, .L125
 1395              	.LBB52:
 1396              	.LBB53:
 1397              		.loc 2 237 0
 1398              		.syntax unified
 1399              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1400 0002 4FF05003 			mov r3, #80												
 1401 0006 83F31188 		msr basepri, r3											
 1402 000a BFF36F8F 		isb														
 1403 000e BFF34F8F 		dsb														
 1404              	
 1405              	@ 0 "" 2
 1406              	.LVL134:
 1407              		.thumb
 1408              		.syntax unified
 1409              	.L126:
 1410 0012 FEE7     		b	.L126
 1411              	.L125:
 1412              	.LBE53:
 1413              	.LBE52:
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 1414              		.loc 1 982 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 49


 1415 0014 10B5     		push	{r4, lr}
 1416              	.LCFI30:
 1417              		.cfi_def_cfa_offset 8
 1418              		.cfi_offset 4, -8
 1419              		.cfi_offset 14, -4
 1420 0016 0446     		mov	r4, r0
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1421              		.loc 1 989 0
 1422 0018 FFF7FEFF 		bl	vPortEnterCritical
 1423              	.LVL135:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Checking to see if it is in the NULL list in effect checks to see if
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is referenced from either the current or the overflow timer lists in
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		one go, but the logic has to be reversed, hence the '!'. */
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimerIsInActiveList = ( BaseType_t ) !( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListIte
 1424              		.loc 1 994 0
 1425 001c 6469     		ldr	r4, [r4, #20]
 1426              	.LVL136:
 1427 001e 0034     		adds	r4, r4, #0
 1428 0020 18BF     		it	ne
 1429 0022 0124     		movne	r4, #1
 1430              	.LVL137:
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1431              		.loc 1 996 0
 1432 0024 FFF7FEFF 		bl	vPortExitCritical
 1433              	.LVL138:
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerIsInActiveList;
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1434              		.loc 1 999 0
 1435 0028 2046     		mov	r0, r4
 1436 002a 10BD     		pop	{r4, pc}
 1437              		.cfi_endproc
 1438              	.LFE22:
 1440              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1441              		.align	1
 1442              		.global	pvTimerGetTimerID
 1443              		.syntax unified
 1444              		.thumb
 1445              		.thumb_func
 1446              		.fpu softvfp
 1448              	pvTimerGetTimerID:
 1449              	.LFB23:
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1450              		.loc 1 1003 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 0
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454              	.LVL139:
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 50


1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1455              		.loc 1 1007 0
 1456 0000 40B9     		cbnz	r0, .L130
 1457              	.LBB54:
 1458              	.LBB55:
 1459              		.loc 2 237 0
 1460              		.syntax unified
 1461              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1462 0002 4FF05003 			mov r3, #80												
 1463 0006 83F31188 		msr basepri, r3											
 1464 000a BFF36F8F 		isb														
 1465 000e BFF34F8F 		dsb														
 1466              	
 1467              	@ 0 "" 2
 1468              	.LVL140:
 1469              		.thumb
 1470              		.syntax unified
 1471              	.L131:
 1472 0012 FEE7     		b	.L131
 1473              	.L130:
 1474              	.LBE55:
 1475              	.LBE54:
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 1476              		.loc 1 1003 0
 1477 0014 10B5     		push	{r4, lr}
 1478              	.LCFI31:
 1479              		.cfi_def_cfa_offset 8
 1480              		.cfi_offset 4, -8
 1481              		.cfi_offset 14, -4
 1482 0016 0446     		mov	r4, r0
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1483              		.loc 1 1009 0
 1484 0018 FFF7FEFF 		bl	vPortEnterCritical
 1485              	.LVL141:
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1486              		.loc 1 1011 0
 1487 001c 246A     		ldr	r4, [r4, #32]
 1488              	.LVL142:
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1489              		.loc 1 1013 0
 1490 001e FFF7FEFF 		bl	vPortExitCritical
 1491              	.LVL143:
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1492              		.loc 1 1016 0
 1493 0022 2046     		mov	r0, r4
 1494 0024 10BD     		pop	{r4, pc}
 1495              		.cfi_endproc
 1496              	.LFE23:
 1498              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1499              		.align	1
 1500              		.global	vTimerSetTimerID
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 51


 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1504              		.fpu softvfp
 1506              	vTimerSetTimerID:
 1507              	.LFB24:
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1508              		.loc 1 1020 0
 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 0
 1511              		@ frame_needed = 0, uses_anonymous_args = 0
 1512              	.LVL144:
 1513 0000 38B5     		push	{r3, r4, r5, lr}
 1514              	.LCFI32:
 1515              		.cfi_def_cfa_offset 16
 1516              		.cfi_offset 3, -16
 1517              		.cfi_offset 4, -12
 1518              		.cfi_offset 5, -8
 1519              		.cfi_offset 14, -4
 1520              	.LVL145:
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1521              		.loc 1 1023 0
 1522 0002 40B9     		cbnz	r0, .L135
 1523              	.LBB56:
 1524              	.LBB57:
 1525              		.loc 2 237 0
 1526              		.syntax unified
 1527              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1528 0004 4FF05003 			mov r3, #80												
 1529 0008 83F31188 		msr basepri, r3											
 1530 000c BFF36F8F 		isb														
 1531 0010 BFF34F8F 		dsb														
 1532              	
 1533              	@ 0 "" 2
 1534              	.LVL146:
 1535              		.thumb
 1536              		.syntax unified
 1537              	.L136:
 1538 0014 FEE7     		b	.L136
 1539              	.L135:
 1540 0016 0446     		mov	r4, r0
 1541 0018 0D46     		mov	r5, r1
 1542              	.LBE57:
 1543              	.LBE56:
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1544              		.loc 1 1025 0
 1545 001a FFF7FEFF 		bl	vPortEnterCritical
 1546              	.LVL147:
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1547              		.loc 1 1027 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 52


 1548 001e 2562     		str	r5, [r4, #32]
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1549              		.loc 1 1029 0
 1550 0020 FFF7FEFF 		bl	vPortExitCritical
 1551              	.LVL148:
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1552              		.loc 1 1030 0
 1553 0024 38BD     		pop	{r3, r4, r5, pc}
 1554              		.cfi_endproc
 1555              	.LFE24:
 1557              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1558              		.align	2
 1559              		.set	.LANCHOR0,. + 0
 1562              	pxCurrentTimerList:
 1563 0000 00000000 		.space	4
 1564              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1565              		.align	2
 1566              		.set	.LANCHOR1,. + 0
 1569              	pxOverflowTimerList:
 1570 0000 00000000 		.space	4
 1571              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1572              		.align	2
 1573              		.set	.LANCHOR3,. + 0
 1576              	xActiveTimerList1:
 1577 0000 00000000 		.space	20
 1577      00000000 
 1577      00000000 
 1577      00000000 
 1577      00000000 
 1578              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1579              		.align	2
 1580              		.set	.LANCHOR4,. + 0
 1583              	xActiveTimerList2:
 1584 0000 00000000 		.space	20
 1584      00000000 
 1584      00000000 
 1584      00000000 
 1584      00000000 
 1585              		.section	.bss.xLastTime.5392,"aw",%nobits
 1586              		.align	2
 1587              		.set	.LANCHOR6,. + 0
 1590              	xLastTime.5392:
 1591 0000 00000000 		.space	4
 1592              		.section	.bss.xTimerQueue,"aw",%nobits
 1593              		.align	2
 1594              		.set	.LANCHOR2,. + 0
 1597              	xTimerQueue:
 1598 0000 00000000 		.space	4
 1599              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1600              		.align	2
 1601              		.set	.LANCHOR5,. + 0
 1604              	xTimerTaskHandle:
 1605 0000 00000000 		.space	4
 1606              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 1607              		.align	2
 1608              	.LC0:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 53


 1609 0000 546D7251 		.ascii	"TmrQ\000"
 1609      00
 1610              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 1611              		.align	2
 1612              	.LC1:
 1613 0000 546D7220 		.ascii	"Tmr Svc\000"
 1613      53766300 
 1614              		.text
 1615              	.Letext0:
 1616              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1617              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1618              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1619              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1620              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1621              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 1622              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1623              		.file 10 "Inc/FreeRTOSConfig.h"
 1624              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1625              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1626              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1627              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 1628              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:16     .text.prvGetNextExpireTime:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:22     .text.prvGetNextExpireTime:0000000000000000 prvGetNextExpireTime
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:55     .text.prvGetNextExpireTime:000000000000001c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:60     .text.prvInsertTimerInActiveList:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:66     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:144    .text.prvInsertTimerInActiveList:0000000000000040 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:150    .text.prvCheckForValidListAndQueue:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:156    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:218    .text.prvCheckForValidListAndQueue:0000000000000044 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:228    .text.prvInitialiseNewTimer:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:234    .text.prvInitialiseNewTimer:0000000000000000 prvInitialiseNewTimer
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:305    .text.xTimerCreateTimerTask:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:312    .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:377    .text.xTimerCreateTimerTask:0000000000000040 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1164   .text.prvTimerTask:0000000000000000 prvTimerTask
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:385    .text.xTimerCreate:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:392    .text.xTimerCreate:0000000000000000 xTimerCreate
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:446    .text.xTimerGenericCommand:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:453    .text.xTimerGenericCommand:0000000000000000 xTimerGenericCommand
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:569    .text.xTimerGenericCommand:0000000000000068 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:574    .text.prvSwitchTimerLists:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:580    .text.prvSwitchTimerLists:0000000000000000 prvSwitchTimerLists
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:692    .text.prvSwitchTimerLists:0000000000000070 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:698    .text.prvSampleTimeNow:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:704    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:752    .text.prvSampleTimeNow:0000000000000028 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:757    .text.prvProcessExpiredTimer:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:763    .text.prvProcessExpiredTimer:0000000000000000 prvProcessExpiredTimer
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:854    .text.prvProcessExpiredTimer:000000000000005c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:861    .text.prvProcessTimerOrBlockTask:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:867    .text.prvProcessTimerOrBlockTask:0000000000000000 prvProcessTimerOrBlockTask
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:967    .text.prvProcessTimerOrBlockTask:0000000000000068 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:974    .text.prvProcessReceivedCommands:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:980    .text.prvProcessReceivedCommands:0000000000000000 prvProcessReceivedCommands
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1033   .text.prvProcessReceivedCommands:000000000000003c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1043   .text.prvProcessReceivedCommands:0000000000000064 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1153   .text.prvProcessReceivedCommands:00000000000000e0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1158   .text.prvTimerTask:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1196   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1203   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1236   .text.xTimerGetTimerDaemonTaskHandle:000000000000001c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1243   .text.xTimerGetPeriod:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1250   .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1288   .text.xTimerGetExpiryTime:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1295   .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1334   .text.pcTimerGetName:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1341   .text.pcTimerGetName:0000000000000000 pcTimerGetName
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1379   .text.xTimerIsTimerActive:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1386   .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1441   .text.pvTimerGetTimerID:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1448   .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1499   .text.vTimerSetTimerID:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1506   .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1558   .bss.pxCurrentTimerList:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1562   .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s 			page 55


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1565   .bss.pxOverflowTimerList:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1569   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1572   .bss.xActiveTimerList1:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1576   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1579   .bss.xActiveTimerList2:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1583   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1586   .bss.xLastTime.5392:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1590   .bss.xLastTime.5392:0000000000000000 xLastTime.5392
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1593   .bss.xTimerQueue:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1597   .bss.xTimerQueue:0000000000000000 xTimerQueue
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1600   .bss.xTimerTaskHandle:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1604   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1607   .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccpxEp5r.s:1611   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreate
vQueueAddToRegistry
vListInitialiseItem
xTaskCreate
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueGenericReceive
vPortFree
